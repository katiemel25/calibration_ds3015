/* This script uses CUORE calibration data to create histograms of different peak energy events within each Tellurium crystal.

To run:
>root
>.L analysis.cpp
>plot_AllString_Th232Peaks(Time)

where "Time" is the total time from the simulation (can be grabbed from the Time histogram from the g4cuore output file)

Written by: Katie Melbourne
katherine.melbourne@yale.edu
*/

#ifndef __CINT__
#include "RooGlobalFunc.h"
#endif

#include "TROOT.h"
#include "TTree.h"
#include "TSystem.h"
#include "TFile.h"
#include "TH1.h"
#include "TH1F.h"
#include "TH1D.h"
#include "TGraph.h"
#include "TGraphAsymmErrors.h"
#include "TStyle.h"
#include "TCanvas.h"
#include "TLegend.h"
#include "TCut.h"
#include <iostream>
#include "THStack.h"
#include "TMath.h"

#include "RooRealVar.h"
#include "RooDataSet.h"
#include "RooGaussian.h"
#include "RooPlot.h"
#include "TAxis.h"

using std::cout;
using std::cin;
using std::endl;
using namespace RooFit;

void plot_peaks()
{
  
  int nbins = 988;
  int energy_bins = 200;
  
  /*TChain ch("T"); // creates a chain to process a Tree called "T"
  ch.Add("/nfs/cuore1/scratch/shared_output/output/ds3015/calibration_Production_ds3015_tower019.list/Production_300959_019_C_p001.root");
  ch.Draw("x");*/
  
  TFile* f1 = new TFile("Production_300959_019_C_p001.root");
  
  TTree* t1 = (TTree*)f1->Get("outTree");

  TH1F* Energy = new TH1F("Energy", "Energy", 1000, 0, 3000);

  TCanvas* c2 = new TCanvas("c2", "c2", 600, 600);

  //gStyle->SetOptStat(0);
  
  Energy->Draw();
  
  Energy->SetLineColor(kSpring);
  
  Energy->GetXaxis()->SetTitle("Energy");
  Energy->GetXaxis()->SetRangeUser(0,3000);
  Energy->GetXaxis()->SetNdivisions(1000);
  
  Energy->GetYaxis()->SetTitle("Counts");
  Energy->GetYaxis()->SetRangeUser(0,8000)
 
  c2->SetGridx();
  c2->SetLogy();
  c2->SetTickx();
  c2->SetTicky();
  c2->BuildLegend();*/
  
  /*
    Used this code to draw a random histogram as a test
  
  TH1F* h1 = new TH1F("h1","Random Gaussian",100,-2,2);
  h1->FillRandom("gaus",10000);
  h1->Draw();*/
  
}
